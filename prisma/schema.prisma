generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String  @id @default(uuid())
  email            String  @unique
  password         String
  fullname         String
  username         String  @unique
  profile_photo    String?
  profile_photo_id String?

  posts    Post[]    @relation("AuthorPosts") // Posts creados por el usuario
  taggedIn Post[]    @relation("TaggedPosts") // Posts donde fue etiquetado
  Like     Like[]
  Comment  Comment[]
}

model Post {
  id        String   @id @default(cuid())
  caption   String? // Descripción opcional del post
  imageUrl  String // URL de la imagen en Cloudinary u otro
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relaciones
  author   User   @relation("AuthorPosts", fields: [authorId], references: [id])
  authorId String

  likes    Like[] // "Me gusta"
  comments Comment[] // Comentarios

  location    String? // Geolocalización opcional
  taggedUsers User[]  @relation("TaggedPosts") // Usuarios etiquetados

  type PostType @default(IMAGE)

  @@index([authorId])
}

enum PostType {
  IMAGE
  VIDEO
}

model Like {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  createdAt DateTime @default(now())

  @@unique([userId, postId]) // Un usuario solo puede dar like una vez
}

model Comment {
  id        String   @id @default(cuid())
  text      String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  createdAt DateTime @default(now())
}
